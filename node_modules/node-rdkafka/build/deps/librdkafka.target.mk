# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := librdkafka
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=librdkafka' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-Wno-type-limits \
	-Wno-unused-function \
	-Wno-maybe-uninitialized \
	-Wno-sign-compare \
	-Wno-missing-field-initializers \
	-Wno-empty-body \
	-Wno-old-style-declaration \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++0x

INCS_Debug := \
	-I/root/.node-gyp/9.10.1/include/node \
	-I/root/.node-gyp/9.10.1/src \
	-I/root/.node-gyp/9.10.1/deps/uv/include \
	-I/root/.node-gyp/9.10.1/deps/v8/include \
	-I$(srcdir)/deps/librdkafka/src

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=librdkafka' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-Wno-type-limits \
	-Wno-unused-function \
	-Wno-maybe-uninitialized \
	-Wno-sign-compare \
	-Wno-missing-field-initializers \
	-Wno-empty-body \
	-Wno-old-style-declaration \
	-O3 \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++0x

INCS_Release := \
	-I/root/.node-gyp/9.10.1/include/node \
	-I/root/.node-gyp/9.10.1/src \
	-I/root/.node-gyp/9.10.1/deps/uv/include \
	-I/root/.node-gyp/9.10.1/deps/v8/include \
	-I$(srcdir)/deps/librdkafka/src

OBJS := \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_broker.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_msg.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_topic.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_conf.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_timer.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_offset.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_transport.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_buf.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_queue.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_op.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_request.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_cgrp.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_pattern.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_partition.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_subscription.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_assignor.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_range_assignor.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_roundrobin_assignor.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_feature.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdcrc32.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/crc32c.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdaddr.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdrand.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdlist.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/tinycthread.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdlog.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdstring.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_event.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_metadata.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdregex.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdports.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_metadata_cache.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdavl.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_sasl.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_sasl_plain.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_interceptor.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_msgset_writer.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_msgset_reader.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdvarint.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdbuf.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdunittest.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_lz4.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/xxhash.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_sasl_scram.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/snappy.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdgz.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rddl.o \
	$(obj).target/$(TARGET)/deps/librdkafka/src/rdkafka_plugin.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS :=

$(obj).target/deps/rdkafka.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/deps/rdkafka.a: LIBS := $(LIBS)
$(obj).target/deps/rdkafka.a: TOOLSET := $(TOOLSET)
$(obj).target/deps/rdkafka.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(obj).target/deps/rdkafka.a
# Add target alias
.PHONY: librdkafka
librdkafka: $(obj).target/deps/rdkafka.a

# Add target alias to "all" target.
.PHONY: all
all: librdkafka

# Add target alias
.PHONY: librdkafka
librdkafka: $(builddir)/rdkafka.a

# Copy this to the static library output path.
$(builddir)/rdkafka.a: TOOLSET := $(TOOLSET)
$(builddir)/rdkafka.a: $(obj).target/deps/rdkafka.a FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/rdkafka.a
# Short alias for building this static library.
.PHONY: rdkafka.a
rdkafka.a: $(obj).target/deps/rdkafka.a $(builddir)/rdkafka.a

# Add static library to "all" target.
.PHONY: all
all: $(builddir)/rdkafka.a

