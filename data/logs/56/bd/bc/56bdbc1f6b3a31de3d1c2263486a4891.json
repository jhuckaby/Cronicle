{"type":"list_page","items":[{"id":"jjh932jz619","event":"ejh8vu06v01","action":"job_run","epoch":1526473771,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5385","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"event":{"enabled":1,"params":{"script":"#!/usr/bin/env node\n\n'use strict';\nlet Kafka = require('node-rdkafka');\nlet jobid =  `${process.env.JOB_EVENT_TITLE}${process.env.JOB_ID}`.replace(' ','');\nconst topicToProduce = process.env.TOPIC_TO_PRODUCE ;\nconst topicToConsume = process.env.TOPIC_TO_CONSUME ;\nlet requestDelay = process.env.REQUEST_DELAY || 10000;\n\n//validate();\n\nconsole.log('Creating producer')\nvar producer = new Kafka.Producer({\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'client.id': jobid ,\n  'dr_cb': true\n});\n//message body\nlet trigger = {\n  timeout : Number(process.env.JOB_TIMEOUT),\n  jobid :  jobid || 'jobid' ,\n  processingTime : process.env.PROCESSING_TIME  ,\n  error : process.env.IN_ERROR || false,\n  operation: 'Start'\n};\n// message key\nlet key = {jobid: jobid};\n\nconsole.log('Producer connection');\n\n\n// start consuming response\nvar consumer = new Kafka.KafkaConsumer({\n  //'debug': 'all',\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'group.id': jobid,\n  'enable.auto.commit': true\n} , {\n    'auto.offset.reset' : 'earliest'\n});\n//logging debug messages, if debug is enabled\nconsumer.on('event.log', function(log) {\n  console.log(log);\n});\n//logging all errors\nconsumer.on('event.error',onConsumerError);\n// when consumer is ready , subscribe to topics\nconsumer.on('ready', function(arg) {\n  console.log('consumer ready.' + JSON.stringify(arg));\n  consumer.subscribe([topicToConsume]);\n  //start consuming messages\n  consumer.consume();\n  // Connect to the broker manually\n  producer.connect();\n  // Wait for the ready event before proceeding\n  producer.on('ready', function() {\n    try {\n      console.log('Producer is ready');\n      // send message to job trigger\n      producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n    } catch (err) {\n      console.error('A problem occurred when sending our message');\n      console.error(err);\n      process.exit(1)\n    }\n  });\n\n\n});\nconsumer.on('data', function(msg) {\n  // Output the actual message contents\n  //console.log(JSON.stringify(msg));\n  let record = JSON.parse(msg.value.toString());\n  console.log(msg.value.toString());\n  if(record.jobid === jobid){\n    consumer.disconnect();\n    onNextMsgReceived(record);\n  }\n});\nconsumer.on('disconnected', function(arg) {\n  console.log('consumer disconnected. ' + JSON.stringify(arg));\n});\n//starting the consumer\nconsumer.connect();\n\nprocess.on('SIGTERM',()=>{\n  console.log('Sending a message to abort job');\n  consumer.disconnect();\n  trigger.operation = 'Abort';\n  // send message to job trigger\n  producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n})\n\n\n/**\n* Function execute on next message from kafka for a consumer\n*/\nfunction onNextMsgReceived(value){\n  console.log(`Job response received ${value.jobid} , status : ${value.result} , percentage : ${value.percentage}`);\n  console.log(`${value.percentage}%`);\n  if(value.result === 'Success' && value.percentage === 100){\n    process.exit();\n  }else if (value.result === 'Failure'){\n    process.exit(1);\n  }\n}\n\n/**\n* Function to validate if environment variable are properly configured\n*\n*/\nfunction validate() {\n  if(!process.env.JOB_ID) {\n    console.error('JOBID not defined !');\n    process.exit(1);\n  }else if(!process.env.JOB_EVENT_TITLE) {\n    console.error('JOB_EVENT_TITLE not defined !');\n    process.exit(1);\n  } else if(!process.env.JOB_TIMEOUT){\n    console.error('JOB_TIMEOUT not defined !');\n    process.exit(1);\n  } else if(!process.env.TOPIC_TO_CONSUME) {\n    console.error('TOPIC_TO_CONSUME not defined !');\n    process.exit(1);\n  }else if(!process.env.TOPIC_TO_PRODUCE) {\n    console.error('TOPIC_TO_PRODUCE not defined !');\n    process.exit(1);\n  }else if(!process.env.BROKER_LIST) {\n    console.error('BROKER_LIST not defined !');\n    process.exit(1);\n  }\n}\n\n/**\n*   An error occurs during a topic creation , so you need to shutdown a consumer instance\n*/\nfunction onConsumerError(err){\n  console.log(`Something wrong consuming event ${topicToConsume} : ${err}`);\n  process.exit(1);\n}\n\n// Any errors we encounter, including connection errors\nproducer.on('event.error', function(err) {\n  console.error('Error from producer');\n  console.error(err);\n  process.exit(1);\n})\n","annotate":1,"json":1,"TOPIC_TO_CONSUME":"TriggerForecastOptimizationResponse","TOPIC_TO_PRODUCE":"TriggerForecastOptimization","BROKER_LIST":"localhost:9092"},"timing":{"minutes":[0],"months":[5],"days":[16],"hours":[5]},"max_children":32,"timeout":3600,"catch_up":0,"queue_max":1000,"timezone":"America/New_York","plugin":"shellplug","title":"ForecastOptimization","category":"general","target":"allgrp","algo":"random","multiplex":0,"stagger":0,"retries":0,"retry_delay":0,"detached":0,"queue":0,"chain":"","chain_error":"","notify_success":"","notify_fail":"","web_hook":"","cpu_limit":0,"cpu_sustain":0,"memory_limit":0,"memory_sustain":0,"notes":"","id":"ejh8vu06v01","modified":1526473767,"created":1526461614,"username":"admin"},"action":"event_update","epoch":1526473768,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5283","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8zwoh618","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526468458.218,"elapsed":856.5620000362396,"perf":"","cpu":{"min":0.2,"max":5,"total":33.90000000000003,"count":85,"current":0.2},"mem":{"min":69029888,"max":69103616,"total":5867614208,"count":85,"current":69103616},"log_file_size":548,"action":"job_complete","epoch":1526469314,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8zwoh618","event":"ejh8vu06v01","action":"job_run","epoch":1526468458,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5471","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8zkpzy15","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526467900.318,"elapsed":264.03600001335144,"perf":"","cpu":{"min":0.1,"max":2.3,"total":11.5,"count":25,"current":0.2},"mem":{"min":69074944,"max":69074944,"total":1726873600,"count":25,"current":69074944},"log_file_size":635,"action":"job_complete","epoch":1526468164,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8zgj2m13","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526467704.719,"elapsed":453.32999992370605,"perf":"","cpu":{"min":0.3,"max":3.5,"total":23.000000000000018,"count":45,"current":0.3},"mem":{"min":68980736,"max":69238784,"total":3104391168,"count":45,"current":69238784},"log_file_size":635,"action":"job_complete","epoch":1526468158,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8zfeuj12","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526467652.587,"elapsed":488.88100004196167,"perf":"","cpu":{"min":0.1,"max":2.7,"total":16.8,"count":48,"current":0.1},"mem":{"min":69038080,"max":69308416,"total":3314098176,"count":48,"current":69308416},"log_file_size":635,"action":"job_complete","epoch":1526468141,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8zi4fr14","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526467779.063,"elapsed":360.27699995040894,"perf":"","cpu":{"min":0.1,"max":4.4,"total":14.599999999999998,"count":36,"current":0.1},"mem":{"min":68800512,"max":69050368,"total":2477068288,"count":36,"current":69050368},"log_file_size":635,"action":"job_complete","epoch":1526468139,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8zldet16","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526467930.661,"elapsed":206.3710000514984,"perf":"","cpu":{"min":0.1,"max":2.2,"total":10.000000000000002,"count":20,"current":0.1},"mem":{"min":69058560,"max":69332992,"total":1381445632,"count":20,"current":69332992},"log_file_size":635,"action":"job_complete","epoch":1526468137,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8znj8717","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526468031.511,"elapsed":103.31500005722046,"perf":"","cpu":{"min":0.4,"max":2.2,"total":7.500000000000002,"count":9,"current":0.4},"mem":{"min":69091328,"max":69091328,"total":621821952,"count":9,"current":69091328},"log_file_size":635,"action":"job_complete","epoch":1526468134,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"event":{"enabled":1,"params":{"script":"#!/usr/bin/env node\n\n'use strict';\nlet Kafka = require('node-rdkafka');\nlet jobid = `${process.env.JOB_EVENT_TITLE}${process.env.JOB_ID}`.replace(' ','');\nconst topicToProduce = process.env.TOPIC_TO_PRODUCE || 'TriggerForecastOptimization' ;\nconst topicToConsume = process.env.TOPIC_TO_CONSUME || 'TriggerForecastOptimizationResponse';\nlet requestDelay = process.env.REQUEST_DELAY || 10000;\n\nvalidate();\n\nconsole.log('Creating producer')\nvar producer = new Kafka.Producer({\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'client.id': jobid ,\n  'dr_cb': true\n});\n//message body\nlet trigger = {\n  timeout : Number(process.env.JOB_TIMEOUT) || 1000,\n  jobid :  jobid || 'jobid' ,\n  processingTime : process.env.PROCESSING_TIME || 1000  ,\n  error : process.env.IN_ERROR || false,\n  operation: 'Start'\n};\n// message key\nlet key = {jobid: jobid};\n\nconsole.log('Producer connection');\n\n\n// start consuming response\nvar consumer = new Kafka.KafkaConsumer({\n  //'debug': 'all',\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'group.id': jobid,\n  'enable.auto.commit': true\n} , {\n    'auto.offset.reset' : 'earliest'\n});\n//logging debug messages, if debug is enabled\nconsumer.on('event.log', function(log) {\n  console.log(log);\n});\n//logging all errors\nconsumer.on('event.error',onConsumerError);\n// when consumer is ready , subscribe to topics\nconsumer.on('ready', function(arg) {\n  console.log('consumer ready.' + JSON.stringify(arg));\n  consumer.subscribe([topicToConsume]);\n  //start consuming messages\n  consumer.consume();\n  // Connect to the broker manually\n  producer.connect();\n  // Wait for the ready event before proceeding\n  producer.on('ready', function() {\n    try {\n      console.log('Producer is ready');\n      // send message to job trigger\n      producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n    } catch (err) {\n      console.error('A problem occurred when sending our message');\n      console.error(err);\n      process.exit(1)\n    }\n  });\n\n\n});\nconsumer.on('data', function(msg) {\n  // Output the actual message contents\n  //console.log(JSON.stringify(msg));\n  let record = JSON.parse(msg.value.toString());\n  console.log(msg.value.toString());\n  if(record.jobid === jobid){\n    consumer.disconnect();\n    onNextMsgReceived(record);\n  }\n});\nconsumer.on('disconnected', function(arg) {\n  console.log('consumer disconnected. ' + JSON.stringify(arg));\n});\n//starting the consumer\nconsumer.connect();\n\nprocess.on('SIGTERM',()=>{\n  console.log('Sending a message to abort job');\n  consumer.disconnect();\n  trigger.operation = 'Abort';\n  // send message to job trigger\n  producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n})\n\n\n/**\n* Function execute on next message from kafka for a consumer\n*/\nfunction onNextMsgReceived(value){\n  console.log(`Job response received ${value.jobid} , status : ${value.result} , percentage : ${value.percentage}`);\n  console.log(`${value.percentage}%`);\n  if(value.result === 'Success' && value.percentage === 100){\n    process.exit();\n  }else if (value.result === 'Failure'){\n    process.exit(1);\n  }\n}\n\n/**\n* Function to validate if environment variable are properly configured\n*\n*/\nfunction validate() {\n  if(!process.env.JOB_ID) {\n    console.error('JOBID not defined !');\n    process.exit(1);\n  }else if(!process.env.JOB_EVENT_TITLE) {\n    console.error('JOB_EVENT_TITLE not defined !');\n    process.exit(1);\n  } else if(!process.env.JOB_TIMEOUT){\n    console.error('JOB_TIMEOUT not defined !');\n    process.exit(1);\n  } else if(!process.env.TOPIC_TO_CONSUME) {\n    console.error('TOPIC_TO_CONSUME not defined !');\n    process.exit(1);\n  }else if(!process.env.TOPIC_TO_PRODUCE) {\n    console.error('TOPIC_TO_PRODUCE not defined !');\n    process.exit(1);\n  }else if(!process.env.BROKER_LIST) {\n    console.error('BROKER_LIST not defined !');\n    process.exit(1);\n  }\n}\n\n/**\n*   An error occurs during a topic creation , so you need to shutdown a consumer instance\n*/\nfunction onConsumerError(err){\n  console.log(`Something wrong consuming event ${topicToConsume} : ${err}`);\n  process.exit(1);\n}\n\n// Any errors we encounter, including connection errors\nproducer.on('event.error', function(err) {\n  console.error('Error from producer');\n  console.error(err);\n  process.exit(1);\n})\n","annotate":1,"json":1,"TOPIC_TO_CONSUME":"TriggerForecastOptimizationResponse","TOPIC_TO_PRODUCE":"TriggerForecastOptimization","BROKER_LIST":"localhost:9092"},"timing":{"minutes":[0],"months":[5],"days":[16],"hours":[5]},"max_children":32,"timeout":3600,"catch_up":0,"queue_max":1000,"timezone":"America/New_York","plugin":"shellplug","title":"ForecastOptimization","category":"general","target":"allgrp","algo":"random","multiplex":0,"stagger":0,"retries":0,"retry_delay":0,"detached":0,"queue":0,"chain":"","chain_error":"","notify_success":"","notify_fail":"","web_hook":"","cpu_limit":0,"cpu_sustain":0,"memory_limit":0,"memory_sustain":0,"notes":"","id":"ejh8vu06v01","modified":1526468121,"created":1526461614,"username":"admin"},"action":"event_update","epoch":1526468121,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5369","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8znj8717","event":"ejh8vu06v01","action":"job_run","epoch":1526468031,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5488","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8zldet16","event":"ejh8vu06v01","action":"job_run","epoch":1526467930,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5488","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8zkpzy15","event":"ejh8vu06v01","action":"job_run","epoch":1526467900,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5488","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8zi4fr14","event":"ejh8vu06v01","action":"job_run","epoch":1526467779,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5488","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8zgj2m13","event":"ejh8vu06v01","action":"job_run","epoch":1526467704,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5488","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8zfeuj12","event":"ejh8vu06v01","action":"job_run","epoch":1526467652,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5488","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8z0g9h11","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526466954.581,"elapsed":694.7789998054504,"perf":"","cpu":{"min":0.2,"max":3.2,"total":26.400000000000002,"count":69,"current":0.2},"mem":{"min":69140480,"max":69464064,"total":4771016704,"count":69,"current":69464064},"log_file_size":635,"action":"job_complete","epoch":1526467649,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"event":{"enabled":1,"params":{"script":"#!/usr/bin/env node\n\n'use strict';\nlet Kafka = require('node-rdkafka');\nlet jobid = 'asdfasdf345' || `${process.env.JOB_EVENT_TITLE}${process.env.JOB_ID}`.replace(' ','');\nconst topicToProduce = process.env.TOPIC_TO_PRODUCE || 'TriggerForecastOptimization' ;\nconst topicToConsume = process.env.TOPIC_TO_CONSUME || 'TriggerForecastOptimizationResponse';\nlet requestDelay = process.env.REQUEST_DELAY || 10000;\n\nvalidate();\n\nconsole.log('Creating producer')\nvar producer = new Kafka.Producer({\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'client.id': jobid ,\n  'dr_cb': true\n});\n//message body\nlet trigger = {\n  timeout : Number(process.env.JOB_TIMEOUT) || 1000,\n  jobid :  jobid || 'jobid' ,\n  processingTime : process.env.PROCESSING_TIME || 1000  ,\n  error : process.env.IN_ERROR || false,\n  operation: 'Start'\n};\n// message key\nlet key = {jobid: jobid};\n\nconsole.log('Producer connection');\n\n\n// start consuming response\nvar consumer = new Kafka.KafkaConsumer({\n  //'debug': 'all',\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'group.id': jobid,\n  'enable.auto.commit': true\n} , {\n    'auto.offset.reset' : 'earliest'\n});\n//logging debug messages, if debug is enabled\nconsumer.on('event.log', function(log) {\n  console.log(log);\n});\n//logging all errors\nconsumer.on('event.error',onConsumerError);\n// when consumer is ready , subscribe to topics\nconsumer.on('ready', function(arg) {\n  console.log('consumer ready.' + JSON.stringify(arg));\n  consumer.subscribe([topicToConsume]);\n  //start consuming messages\n  consumer.consume();\n  // Connect to the broker manually\n  producer.connect();\n  // Wait for the ready event before proceeding\n  producer.on('ready', function() {\n    try {\n      console.log('Producer is ready');\n      // send message to job trigger\n      producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n    } catch (err) {\n      console.error('A problem occurred when sending our message');\n      console.error(err);\n      process.exit(1)\n    }\n  });\n\n\n});\nconsumer.on('data', function(msg) {\n  // Output the actual message contents\n  //console.log(JSON.stringify(msg));\n  let record = JSON.parse(msg.value.toString());\n  console.log(msg.value.toString());\n  if(record.jobid === jobid){\n    consumer.disconnect();\n    onNextMsgReceived(record);\n  }\n});\nconsumer.on('disconnected', function(arg) {\n  console.log('consumer disconnected. ' + JSON.stringify(arg));\n});\n//starting the consumer\nconsumer.connect();\n\nprocess.on('SIGTERM',()=>{\n  console.log('Sending a message to abort job');\n  consumer.disconnect();\n  trigger.operation = 'Abort';\n  // send message to job trigger\n  producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n})\n\n\n/**\n* Function execute on next message from kafka for a consumer\n*/\nfunction onNextMsgReceived(value){\n  console.log(`Job response received ${value.jobid} , status : ${value.result} , percentage : ${value.percentage}`);\n  console.log(`${value.percentage}%`);\n  if(value.result === 'Success' && value.percentage === 100){\n    process.exit();\n  }else if (value.result === 'Failure'){\n    process.exit(1);\n  }\n}\n\n/**\n* Function to validate if environment variable are properly configured\n*\n*/\nfunction validate() {\n  if(!process.env.JOB_ID) {\n    console.error('JOBID not defined !');\n    process.exit(1);\n  }else if(!process.env.JOB_EVENT_TITLE) {\n    console.error('JOB_EVENT_TITLE not defined !');\n    process.exit(1);\n  } else if(!process.env.JOB_TIMEOUT){\n    console.error('JOB_TIMEOUT not defined !');\n    process.exit(1);\n  } else if(!process.env.TOPIC_TO_CONSUME) {\n    console.error('TOPIC_TO_CONSUME not defined !');\n    process.exit(1);\n  }else if(!process.env.TOPIC_TO_PRODUCE) {\n    console.error('TOPIC_TO_PRODUCE not defined !');\n    process.exit(1);\n  }else if(!process.env.BROKER_LIST) {\n    console.error('BROKER_LIST not defined !');\n    process.exit(1);\n  }\n}\n\n/**\n*   An error occurs during a topic creation , so you need to shutdown a consumer instance\n*/\nfunction onConsumerError(err){\n  console.log(`Something wrong consuming event ${topicToConsume} : ${err}`);\n  process.exit(1);\n}\n\n// Any errors we encounter, including connection errors\nproducer.on('event.error', function(err) {\n  console.error('Error from producer');\n  console.error(err);\n  process.exit(1);\n})\n","annotate":1,"json":1,"TOPIC_TO_CONSUME":"TriggerForecastOptimizationResponse","TOPIC_TO_PRODUCE":"TriggerForecastOptimization","BROKER_LIST":"localhost:9092"},"timing":{"minutes":[0],"months":[5],"days":[16],"hours":[5]},"max_children":32,"timeout":3600,"catch_up":0,"queue_max":1000,"timezone":"America/New_York","plugin":"shellplug","title":"ForecastOptimization","category":"general","target":"allgrp","algo":"random","multiplex":0,"stagger":0,"retries":0,"retry_delay":0,"detached":0,"queue":0,"chain":"","chain_error":"","notify_success":"","notify_fail":"","web_hook":"","cpu_limit":0,"cpu_sustain":0,"memory_limit":0,"memory_sustain":0,"notes":"","id":"ejh8vu06v01","modified":1526467648,"created":1526461614,"username":"admin"},"action":"event_update","epoch":1526467648,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5386","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8z0g9h11","event":"ejh8vu06v01","action":"job_run","epoch":1526466954,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5480","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8yvc1810","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526466715.82,"elapsed":18.10199999809265,"perf":"","cpu":{"min":3.3,"max":3.3,"total":3.3,"count":1,"current":3.3},"mem":{"min":69038080,"max":69038080,"total":69038080,"count":1,"current":69038080},"log_file_size":635,"action":"job_complete","epoch":1526466733,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8yvc1810","event":"ejh8vu06v01","action":"job_run","epoch":1526466715,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5480","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8ymd1w0x","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526466297.236,"elapsed":407.1080000400543,"perf":"","cpu":{"min":0.3,"max":3.0999999999999996,"total":20.900000000000016,"count":40,"current":0.3},"mem":{"min":68796416,"max":69066752,"total":2752126976,"count":40,"current":69066752},"log_file_size":635,"action":"job_complete","epoch":1526466704,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8yuei90z","event":"ejh8vu06v01","action":"job_run","epoch":1526466672,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5395","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"event":{"enabled":1,"params":{"script":"#!/usr/bin/env node\n\n'use strict';\nlet Kafka = require('node-rdkafka');\nlet jobid = 'asdfasdf345' || `${process.env.JOB_EVENT_TITLE}${process.env.JOB_ID}`.replace(' ','');\nconst topicToProduce = process.env.TOPIC_TO_PRODUCE || 'TriggerForecastOptimization' ;\nconst topicToConsume = process.env.TOPIC_TO_CONSUME || 'TriggerForecastOptimizationResponse';\nlet requestDelay = process.env.REQUEST_DELAY || 10000;\n\nvalidate();\n\nconsole.log('Creating producer')\nvar producer = new Kafka.Producer({\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'client.id': jobid ,\n  'dr_cb': true\n});\n//message body\nlet trigger = {\n  timeout : Number(process.env.JOB_TIMEOUT) || 1000,\n  jobid :  jobid || 'jobid' ,\n  processingTime : process.env.PROCESSING_TIME || 1000  ,\n  error : process.env.IN_ERROR || false,\n  operation: 'Start'\n};\n// message key\nlet key = {jobid: jobid};\n\nconsole.log('Producer connection');\n\n\n// start consuming response\nvar consumer = new Kafka.KafkaConsumer({\n  //'debug': 'all',\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'group.id': jobid,\n  'enable.auto.commit': true,\n  'auto.offset.reset' : 'smallest'\n});\n//logging debug messages, if debug is enabled\nconsumer.on('event.log', function(log) {\n  console.log(log);\n});\n//logging all errors\nconsumer.on('event.error',onConsumerError);\n// when consumer is ready , subscribe to topics\nconsumer.on('ready', function(arg) {\n  console.log('consumer ready.' + JSON.stringify(arg));\n  consumer.subscribe([topicToConsume]);\n  //start consuming messages\n  consumer.consume();\n  // Connect to the broker manually\n  producer.connect();\n  // Wait for the ready event before proceeding\n  producer.on('ready', function() {\n    try {\n      console.log('Producer is ready');\n      // send message to job trigger\n      producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n    } catch (err) {\n      console.error('A problem occurred when sending our message');\n      console.error(err);\n      process.exit(1)\n    }\n  });\n\n\n});\nconsumer.on('data', function(msg) {\n  // Output the actual message contents\n  //console.log(JSON.stringify(msg));\n  let record = JSON.parse(msg.value.toString());\n  console.log(msg.value.toString());\n  if(record.jobid === jobid){\n    consumer.disconnect();\n    onNextMsgReceived(record);\n  }\n});\nconsumer.on('disconnected', function(arg) {\n  console.log('consumer disconnected. ' + JSON.stringify(arg));\n});\n//starting the consumer\nconsumer.connect();\n\nprocess.on('SIGTERM',()=>{\n  console.log('Sending a message to abort job');\n  consumer.disconnect();\n  trigger.operation = 'Abort';\n  // send message to job trigger\n  producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n})\n\n\n/**\n* Function execute on next message from kafka for a consumer\n*/\nfunction onNextMsgReceived(value){\n  console.log(`Job response received ${value.jobid} , status : ${value.result} , percentage : ${value.percentage}`);\n  console.log(`${value.percentage}%`);\n  if(value.result === 'Success' && value.percentage === 100){\n    process.exit();\n  }else if (value.result === 'Failure'){\n    process.exit(1);\n  }\n}\n\n/**\n* Function to validate if environment variable are properly configured\n*\n*/\nfunction validate() {\n  if(!process.env.JOB_ID) {\n    console.error('JOBID not defined !');\n    process.exit(1);\n  }else if(!process.env.JOB_EVENT_TITLE) {\n    console.error('JOB_EVENT_TITLE not defined !');\n    process.exit(1);\n  } else if(!process.env.JOB_TIMEOUT){\n    console.error('JOB_TIMEOUT not defined !');\n    process.exit(1);\n  } else if(!process.env.TOPIC_TO_CONSUME) {\n    console.error('TOPIC_TO_CONSUME not defined !');\n    process.exit(1);\n  }else if(!process.env.TOPIC_TO_PRODUCE) {\n    console.error('TOPIC_TO_PRODUCE not defined !');\n    process.exit(1);\n  }else if(!process.env.BROKER_LIST) {\n    console.error('BROKER_LIST not defined !');\n    process.exit(1);\n  }\n}\n\n/**\n*   An error occurs during a topic creation , so you need to shutdown a consumer instance\n*/\nfunction onConsumerError(err){\n  console.log(`Something wrong consuming event ${topicToConsume} : ${err}`);\n  process.exit(1);\n}\n\n// Any errors we encounter, including connection errors\nproducer.on('event.error', function(err) {\n  console.error('Error from producer');\n  console.error(err);\n  process.exit(1);\n})\n","annotate":1,"json":1,"TOPIC_TO_CONSUME":"TriggerForecastOptimizationResponse","TOPIC_TO_PRODUCE":"TriggerForecastOptimization","BROKER_LIST":"localhost:9092"},"timing":{"minutes":[0],"months":[5],"days":[16],"hours":[5]},"max_children":32,"timeout":3600,"catch_up":0,"queue_max":1000,"timezone":"America/New_York","plugin":"shellplug","title":"ForecastOptimization","category":"general","target":"allgrp","algo":"random","multiplex":0,"stagger":0,"retries":0,"retry_delay":0,"detached":0,"queue":0,"chain":"","chain_error":"","notify_success":"","notify_fail":"","web_hook":"","cpu_limit":0,"cpu_sustain":0,"memory_limit":0,"memory_sustain":0,"notes":"","id":"ejh8vu06v01","modified":1526466669,"created":1526461614,"username":"admin"},"action":"event_update","epoch":1526466669,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5378","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8yqufh0y","event":"ejh8vu06v01","action":"job_run","epoch":1526466506,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5450","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8ymd1w0x","event":"ejh8vu06v01","action":"job_run","epoch":1526466297,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5450","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"event":{"enabled":1,"params":{"script":"#!/usr/bin/env node\n\n'use strict';\nlet Kafka = require('node-rdkafka');\nlet jobid = 'asdfasdf345' || `${process.env.JOB_EVENT_TITLE}${process.env.JOB_ID}`.replace(' ','');\nconst topicToProduce = process.env.TOPIC_TO_PRODUCE || 'TriggerForecastOptimization' ;\nconst topicToConsume = process.env.TOPIC_TO_CONSUME || 'TriggerForecastOptimizationResponse';\nlet requestDelay = process.env.REQUEST_DELAY || 10000;\n\nvalidate();\n\nconsole.log('Creating producer')\nvar producer = new Kafka.Producer({\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'client.id': jobid ,\n  'dr_cb': true\n});\n//message body\nlet trigger = {\n  timeout : Number(process.env.JOB_TIMEOUT) || 1000,\n  jobid :  jobid || 'jobid' ,\n  processingTime : process.env.PROCESSING_TIME || 1000  ,\n  error : process.env.IN_ERROR || false,\n  operation: 'Start'\n};\n// message key\nlet key = {jobid: jobid};\n\nconsole.log('Producer connection');\n// Connect to the broker manually\nproducer.connect();\n\n\n// start consuming response\nvar consumer = new Kafka.KafkaConsumer({\n  //'debug': 'all',\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'group.id': jobid,\n  'enable.auto.commit': true,\n  'auto.offset.reset' : 'smallest'\n});\n//logging debug messages, if debug is enabled\nconsumer.on('event.log', function(log) {\n  console.log(log);\n});\n//logging all errors\nconsumer.on('event.error',onConsumerError);\n// when consumer is ready , subscribe to topics\nconsumer.on('ready', function(arg) {\n  console.log('consumer ready.' + JSON.stringify(arg));\n  consumer.subscribe([topicToConsume]);\n  //start consuming messages\n  consumer.consume();\n});\nconsumer.on('data', function(msg) {\n  // Output the actual message contents\n  //console.log(JSON.stringify(msg));\n  let record = JSON.parse(msg.value.toString());\n  console.log(msg.value.toString());\n  if(record.jobid === jobid){\n    consumer.disconnect();\n    onNextMsgReceived(record);\n  }\n});\nconsumer.on('disconnected', function(arg) {\n  console.log('consumer disconnected. ' + JSON.stringify(arg));\n});\n//starting the consumer\nconsumer.connect();\n\nprocess.on('SIGTERM',()=>{\n  console.log('Sending a message to abort job');\n  consumer.disconnect();\n  trigger.operation = 'Abort';\n  // send message to job trigger\n  producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n})\n\n\n// Wait for the ready event before proceeding\nproducer.on('ready', function() {\n  try {\n    console.log('Producer is ready');\n    // send message to job trigger\n    producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n  } catch (err) {\n    console.error('A problem occurred when sending our message');\n    console.error(err);\n    process.exit(1)\n  }\n});\n\n/**\n* Function execute on next message from kafka for a consumer\n*/\nfunction onNextMsgReceived(value){\n  console.log(`Job response received ${value.jobid} , status : ${value.result} , percentage : ${value.percentage}`);\n  console.log(`${value.percentage}%`);\n  if(value.result === 'Success' && value.percentage === 100){\n    process.exit();\n  }else if (value.result === 'Failure'){\n    process.exit(1);\n  }\n}\n\n/**\n* Function to validate if environment variable are properly configured\n*\n*/\nfunction validate() {\n  if(!process.env.JOB_ID) {\n    console.error('JOBID not defined !');\n    process.exit(1);\n  }else if(!process.env.JOB_EVENT_TITLE) {\n    console.error('JOB_EVENT_TITLE not defined !');\n    process.exit(1);\n  } else if(!process.env.JOB_TIMEOUT){\n    console.error('JOB_TIMEOUT not defined !');\n    process.exit(1);\n  } else if(!process.env.TOPIC_TO_CONSUME) {\n    console.error('TOPIC_TO_CONSUME not defined !');\n    process.exit(1);\n  }else if(!process.env.TOPIC_TO_PRODUCE) {\n    console.error('TOPIC_TO_PRODUCE not defined !');\n    process.exit(1);\n  }else if(!process.env.BROKER_LIST) {\n    console.error('BROKER_LIST not defined !');\n    process.exit(1);\n  }\n}\n\n/**\n*   An error occurs during a topic creation , so you need to shutdown a consumer instance\n*/\nfunction onConsumerError(err){\n  console.log(`Something wrong consuming event ${topicToConsume} : ${err}`);\n  process.exit(1);\n}\n\n// Any errors we encounter, including connection errors\nproducer.on('event.error', function(err) {\n  console.error('Error from producer');\n  console.error(err);\n  process.exit(1);\n})\n","annotate":1,"json":1,"TOPIC_TO_CONSUME":"TriggerForecastOptimizationResponse","TOPIC_TO_PRODUCE":"TriggerForecastOptimization","BROKER_LIST":"localhost:9092"},"timing":{"minutes":[0],"months":[5],"days":[16],"hours":[5]},"max_children":32,"timeout":3600,"catch_up":0,"queue_max":1000,"timezone":"America/New_York","plugin":"shellplug","title":"ForecastOptimization","category":"general","target":"allgrp","algo":"random","multiplex":0,"stagger":0,"retries":0,"retry_delay":0,"detached":0,"queue":0,"chain":"","chain_error":"","notify_success":"","notify_fail":"","web_hook":"","cpu_limit":0,"cpu_sustain":0,"memory_limit":0,"memory_sustain":0,"notes":"","id":"ejh8vu06v01","modified":1526466293,"created":1526461614,"username":"admin"},"action":"event_update","epoch":1526466293,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5348","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8yfjmq0v","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526465979.17,"elapsed":288.14800000190735,"perf":"","cpu":{"min":0.3,"max":3.5,"total":18.200000000000006,"count":28,"current":0.3},"mem":{"min":67837952,"max":67891200,"total":1899515904,"count":28,"current":67891200},"log_file_size":670,"action":"job_complete","epoch":1526466267,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8yg2y10w","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526466004.201,"elapsed":261.07599997520447,"perf":"","cpu":{"min":0.3,"max":3,"total":17.700000000000003,"count":25,"current":0.3},"mem":{"min":68870144,"max":69033984,"total":1721917440,"count":25,"current":69033984},"log_file_size":635,"action":"job_complete","epoch":1526466265,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"event":{"enabled":1,"params":{"script":"#!/usr/bin/env node\n\n'use strict';\nlet Kafka = require('node-rdkafka');\nlet jobid = 'asdfasdf345' || `${process.env.JOB_EVENT_TITLE}${process.env.JOB_ID}`.replace(' ','');\nconst topicToProduce = process.env.TOPIC_TO_PRODUCE || 'TriggerForecastOptimization' ;\nconst topicToConsume = process.env.TOPIC_TO_CONSUME || 'TriggerForecastOptimizationResponse';\nlet requestDelay = process.env.REQUEST_DELAY || 10000;\n\nvalidate();\n\nconsole.log('Creating producer')\nvar producer = new Kafka.Producer({\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'client.id': jobid ,\n  'dr_cb': true\n});\n//message body\nlet trigger = {\n  timeout : Number(process.env.JOB_TIMEOUT) || 1000,\n  jobid :  jobid || 'jobid' ,\n  processingTime : process.env.PROCESSING_TIME || 1000  ,\n  error : process.env.IN_ERROR || false,\n  operation: 'Start'\n};\n// message key\nlet key = {jobid: jobid};\n\nconsole.log('Producer connection');\n// Connect to the broker manually\nproducer.connect();\n\n// Wait for the ready event before proceeding\nproducer.on('ready', function() {\n  try {\n    console.log('Producer is ready');\n    // send message to job trigger\n    producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n  } catch (err) {\n    console.error('A problem occurred when sending our message');\n    console.error(err);\n    process.exit(1)\n  }\n});\n\n\n// start consuming response\nvar consumer = new Kafka.KafkaConsumer({\n  //'debug': 'all',\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'group.id': jobid,\n  'enable.auto.commit': true,\n  'auto.offset.reset' : 'smallest'\n});\n//logging debug messages, if debug is enabled\nconsumer.on('event.log', function(log) {\n  console.log(log);\n});\n//logging all errors\nconsumer.on('event.error',onConsumerError);\n// when consumer is ready , subscribe to topics\nconsumer.on('ready', function(arg) {\n  console.log('consumer ready.' + JSON.stringify(arg));\n  consumer.subscribe([topicToConsume]);\n  //start consuming messages\n  consumer.consume();\n});\nconsumer.on('data', function(msg) {\n  // Output the actual message contents\n  //console.log(JSON.stringify(msg));\n  let record = JSON.parse(msg.value.toString());\n  console.log(msg.value.toString());\n  if(record.jobid === jobid){\n    consumer.disconnect();\n    onNextMsgReceived(record);\n  }\n});\nconsumer.on('disconnected', function(arg) {\n  console.log('consumer disconnected. ' + JSON.stringify(arg));\n});\n//starting the consumer\nconsumer.connect();\n\nprocess.on('SIGTERM',()=>{\n  console.log('Sending a message to abort job');\n  consumer.disconnect();\n  trigger.operation = 'Abort';\n  // send message to job trigger\n  producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n})\n\n\n/**\n* Function execute on next message from kafka for a consumer\n*/\nfunction onNextMsgReceived(value){\n  console.log(`Job response received ${value.jobid} , status : ${value.result} , percentage : ${value.percentage}`);\n  console.log(`${value.percentage}%`);\n  if(value.result === 'Success' && value.percentage === 100){\n    process.exit();\n  }else if (value.result === 'Failure'){\n    process.exit(1);\n  }\n}\n\n/**\n* Function to validate if environment variable are properly configured\n*\n*/\nfunction validate() {\n  if(!process.env.JOB_ID) {\n    console.error('JOBID not defined !');\n    process.exit(1);\n  }else if(!process.env.JOB_EVENT_TITLE) {\n    console.error('JOB_EVENT_TITLE not defined !');\n    process.exit(1);\n  } else if(!process.env.JOB_TIMEOUT){\n    console.error('JOB_TIMEOUT not defined !');\n    process.exit(1);\n  } else if(!process.env.TOPIC_TO_CONSUME) {\n    console.error('TOPIC_TO_CONSUME not defined !');\n    process.exit(1);\n  }else if(!process.env.TOPIC_TO_PRODUCE) {\n    console.error('TOPIC_TO_PRODUCE not defined !');\n    process.exit(1);\n  }else if(!process.env.BROKER_LIST) {\n    console.error('BROKER_LIST not defined !');\n    process.exit(1);\n  }\n}\n\n/**\n*   An error occurs during a topic creation , so you need to shutdown a consumer instance\n*/\nfunction onConsumerError(err){\n  console.log(`Something wrong consuming event ${topicToConsume} : ${err}`);\n  process.exit(1);\n}\n\n// Any errors we encounter, including connection errors\nproducer.on('event.error', function(err) {\n  console.error('Error from producer');\n  console.error(err);\n  process.exit(1);\n})\n","annotate":1,"json":1,"TOPIC_TO_CONSUME":"TriggerForecastOptimizationResponse","TOPIC_TO_PRODUCE":"TriggerForecastOptimization","BROKER_LIST":"localhost:9092"},"timing":{"minutes":[0],"months":[5],"days":[16],"hours":[5]},"max_children":32,"timeout":3600,"catch_up":0,"queue_max":1000,"timezone":"America/New_York","plugin":"shellplug","title":"ForecastOptimization","category":"general","target":"allgrp","algo":"random","multiplex":0,"stagger":0,"retries":0,"retry_delay":0,"detached":0,"queue":0,"chain":"","chain_error":"","notify_success":"","notify_fail":"","web_hook":"","cpu_limit":0,"cpu_sustain":0,"memory_limit":0,"memory_sustain":0,"notes":"","id":"ejh8vu06v01","modified":1526466250,"created":1526461614,"username":"admin"},"action":"event_update","epoch":1526466250,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5348","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8yg2y10w","event":"ejh8vu06v01","action":"job_run","epoch":1526466004,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5427","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8yfjmq0v","event":"ejh8vu06v01","action":"job_run","epoch":1526465979,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5427","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8y6q9h0s","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526465567.861,"elapsed":405.16999983787537,"perf":"","cpu":{"min":0.3,"max":3,"total":20.400000000000016,"count":40,"current":0.3},"mem":{"min":68911104,"max":69115904,"total":2756648960,"count":40,"current":69115904},"log_file_size":705,"action":"job_complete","epoch":1526465973,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8y71lx0t","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526465582.565,"elapsed":388.6269998550415,"perf":"","cpu":{"min":0.3,"max":5.4,"total":24.300000000000015,"count":39,"current":0.3},"mem":{"min":67837952,"max":68034560,"total":2645876736,"count":39,"current":68034560},"log_file_size":670,"action":"job_complete","epoch":1526465971,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8y837u0u","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526465631.306,"elapsed":338.0720000267029,"perf":"","cpu":{"min":0.3,"max":4.3,"total":20.30000000000001,"count":34,"current":0.3},"mem":{"min":68927488,"max":69144576,"total":2343751680,"count":34,"current":69144576},"log_file_size":635,"action":"job_complete","epoch":1526465969,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"event":{"enabled":1,"params":{"script":"#!/usr/bin/env node\n\n'use strict';\nlet Kafka = require('node-rdkafka');\nlet jobid = `${process.env.JOB_EVENT_TITLE}${process.env.JOB_ID}`.replace(' ','');\nconst topicToProduce = process.env.TOPIC_TO_PRODUCE ;\nconst topicToConsume = process.env.TOPIC_TO_CONSUME ;\nlet requestDelay = process.env.REQUEST_DELAY || 10000;\n\nvalidate();\n\nconsole.log('Creating producer')\nvar producer = new Kafka.Producer({\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'client.id': jobid ,\n  'dr_cb': true\n});\n//message body\nlet trigger = {\n  timeout : Number(process.env.JOB_TIMEOUT),\n  jobid :  jobid || 'jobid' ,\n  processingTime : process.env.PROCESSING_TIME  ,\n  error : process.env.IN_ERROR || false,\n  operation: 'Start'\n};\n// message key\nlet key = {jobid: jobid};\n\nconsole.log('Producer connection');\n// Connect to the broker manually\nproducer.connect();\n\n// Wait for the ready event before proceeding\nproducer.on('ready', function() {\n  try {\n    console.log('Producer is ready');\n    // send message to job trigger\n    producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n\n    // start consuming response\n    var consumer = new Kafka.KafkaConsumer({\n      //'debug': 'all',\n      'metadata.broker.list': process.env.BROKER_LIST,\n      'group.id': jobid,\n      'enable.auto.commit': true,\n      'auto.offset.reset' : 'smallest'\n    });\n    //logging debug messages, if debug is enabled\n    consumer.on('event.log', function(log) {\n      console.log(log);\n    });\n    //logging all errors\n    consumer.on('event.error',onConsumerError);\n    // when consumer is ready , subscribe to topics\n    consumer.on('ready', function(arg) {\n      console.log('consumer ready.' + JSON.stringify(arg));\n      consumer.subscribe([topicToConsume]);\n      //start consuming messages\n      consumer.consume();\n    });\n    consumer.on('data', function(msg) {\n      // Output the actual message contents\n      console.log(JSON.stringify(msg));\n      let record = JSON.parse(msg.value.toString());\n      console.log(\"Ciao arnaldo\")\n      console.log(msg.value.toString());\n    });\n    consumer.on('disconnected', function(arg) {\n      console.log('consumer disconnected. ' + JSON.stringify(arg));\n    });\n    //starting the consumer\n    consumer.connect();\n\n    process.on('SIGTERM',()=>{\n \t console.log('Sending a message to abort job');\n\t consumer.disconnect();\n \t trigger.operation = 'Abort';\n \t // send message to job trigger\n \t producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n   })\n\n  } catch (err) {\n    console.error('A problem occurred when sending our message');\n    console.error(err);\n    process.exit(1)\n  }\n});\n\n\n/**\n* Function execute on next message from kafka for a consumer\n*/\nfunction onNextMsgReceived(value){\n  console.log(`Job response received ${value.jobid} , status : ${value.result} , percentage : ${value.percentage}`);\n  console.log(`${value.percentage}%`);\n  if(value.result === 'Success' && value.percentage === 100){\n    process.exit();\n  }else if (value.result === 'Failure'){\n    process.exit(1);\n  }\n}\n\n/**\n* Function to validate if environment variable are properly configured\n*\n*/\nfunction validate() {\n  if(!process.env.JOB_ID) {\n    console.error('JOBID not defined !');\n    process.exit(1);\n  }else if(!process.env.JOB_EVENT_TITLE) {\n    console.error('JOB_EVENT_TITLE not defined !');\n    process.exit(1);\n  } else if(!process.env.JOB_TIMEOUT){\n    console.error('JOB_TIMEOUT not defined !');\n    process.exit(1);\n  } else if(!process.env.TOPIC_TO_CONSUME) {\n    console.error('TOPIC_TO_CONSUME not defined !');\n    process.exit(1);\n  }else if(!process.env.TOPIC_TO_PRODUCE) {\n    console.error('TOPIC_TO_PRODUCE not defined !');\n    process.exit(1);\n  }else if(!process.env.BROKER_LIST) {\n    console.error('BROKER_LIST not defined !');\n    process.exit(1);\n  }\n}\n\n/**\n*   An error occurs during a topic creation , so you need to shutdown a consumer instance\n*/\nfunction onConsumerError(err){\n  console.log(`Something wrong consuming event ${topicToConsume} : ${err}`);\n  process.exit(1);\n}\n\n// Any errors we encounter, including connection errors\nproducer.on('event.error', function(err) {\n  console.error('Error from producer');\n  console.error(err);\n  process.exit(1);\n})\n","annotate":1,"json":1,"TOPIC_TO_CONSUME":"TriggerForecastOptimizationResponse","TOPIC_TO_PRODUCE":"TriggerForecastOptimization","BROKER_LIST":"localhost:9092"},"timing":{"minutes":[0],"months":[5],"days":[16],"hours":[5]},"max_children":32,"timeout":3600,"catch_up":0,"queue_max":1000,"timezone":"America/New_York","plugin":"shellplug","title":"ForecastOptimization","category":"general","target":"allgrp","algo":"random","multiplex":0,"stagger":0,"retries":0,"retry_delay":0,"detached":0,"queue":0,"chain":"","chain_error":"","notify_success":"","notify_fail":"","web_hook":"","cpu_limit":0,"cpu_sustain":0,"memory_limit":0,"memory_sustain":0,"notes":"","id":"ejh8vu06v01","modified":1526465955,"created":1526461614,"username":"admin"},"action":"event_update","epoch":1526465955,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5325","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8y837u0u","event":"ejh8vu06v01","action":"job_run","epoch":1526465631,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5429","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8y71lx0t","event":"ejh8vu06v01","action":"job_run","epoch":1526465582,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5429","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8y6q9h0s","event":"ejh8vu06v01","action":"job_run","epoch":1526465567,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5429","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"event":{"enabled":1,"params":{"script":"#!/usr/bin/env node\n\n'use strict';\nlet Kafka = require('node-rdkafka');\nlet jobid = `${process.env.JOB_EVENT_TITLE}${process.env.JOB_ID}`.replace(' ','');\nconst topicToProduce = process.env.TOPIC_TO_PRODUCE ;\nconst topicToConsume = process.env.TOPIC_TO_CONSUME ;\nlet requestDelay = process.env.REQUEST_DELAY || 10000;\n\nvalidate();\n\nconsole.log('Creating producer')\nvar producer = new Kafka.Producer({\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'client.id': jobid ,\n  'dr_cb': true\n});\n//message body\nlet trigger = {\n  timeout : Number(process.env.JOB_TIMEOUT),\n  jobid :  jobid || 'jobid' ,\n  processingTime : process.env.PROCESSING_TIME  ,\n  error : process.env.IN_ERROR || false,\n  operation: 'Start'\n};\n// message key\nlet key = {jobid: jobid};\n\nconsole.log('Producer connection');\n// Connect to the broker manually\nproducer.connect();\n\n// Wait for the ready event before proceeding\nproducer.on('ready', function() {\n  try {\n    console.log('Producer is ready');\n    // send message to job trigger\n    producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n\n    // start consuming response\n    var consumer = new Kafka.KafkaConsumer({\n      //'debug': 'all',\n      'metadata.broker.list': process.env.BROKER_LIST,\n      'group.id': jobid,\n      'enable.auto.commit': true,\n      'auto.offset.reset' : 'smallest'\n    });\n    //logging debug messages, if debug is enabled\n    consumer.on('event.log', function(log) {\n      console.log(log);\n    });\n    //logging all errors\n    consumer.on('event.error',onConsumerError);\n    // when consumer is ready , subscribe to topics\n    consumer.on('ready', function(arg) {\n      console.log('consumer ready.' + JSON.stringify(arg));\n      consumer.subscribe([topicToConsume]);\n      //start consuming messages\n      consumer.consume();\n    });\n    consumer.on('data', function(msg) {\n      // Output the actual message contents\n      //console.log(JSON.stringify(msg));\n      let record = JSON.parse(msg.value.toString());\n      console.log(\"Ciao arnaldo\")\n      console.log(msg.value.toString());\n    });\n    consumer.on('disconnected', function(arg) {\n      console.log('consumer disconnected. ' + JSON.stringify(arg));\n    });\n    //starting the consumer\n    consumer.connect();\n\n    process.on('SIGTERM',()=>{\n \t console.log('Sending a message to abort job');\n\t consumer.disconnect();\n \t trigger.operation = 'Abort';\n \t // send message to job trigger\n \t producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n   })\n\n  } catch (err) {\n    console.error('A problem occurred when sending our message');\n    console.error(err);\n    process.exit(1)\n  }\n});\n\n\n/**\n* Function execute on next message from kafka for a consumer\n*/\nfunction onNextMsgReceived(value){\n  console.log(`Job response received ${value.jobid} , status : ${value.result} , percentage : ${value.percentage}`);\n  console.log(`${value.percentage}%`);\n  if(value.result === 'Success' && value.percentage === 100){\n    process.exit();\n  }else if (value.result === 'Failure'){\n    process.exit(1);\n  }\n}\n\n/**\n* Function to validate if environment variable are properly configured\n*\n*/\nfunction validate() {\n  if(!process.env.JOB_ID) {\n    console.error('JOBID not defined !');\n    process.exit(1);\n  }else if(!process.env.JOB_EVENT_TITLE) {\n    console.error('JOB_EVENT_TITLE not defined !');\n    process.exit(1);\n  } else if(!process.env.JOB_TIMEOUT){\n    console.error('JOB_TIMEOUT not defined !');\n    process.exit(1);\n  } else if(!process.env.TOPIC_TO_CONSUME) {\n    console.error('TOPIC_TO_CONSUME not defined !');\n    process.exit(1);\n  }else if(!process.env.TOPIC_TO_PRODUCE) {\n    console.error('TOPIC_TO_PRODUCE not defined !');\n    process.exit(1);\n  }else if(!process.env.BROKER_LIST) {\n    console.error('BROKER_LIST not defined !');\n    process.exit(1);\n  }\n}\n\n/**\n*   An error occurs during a topic creation , so you need to shutdown a consumer instance\n*/\nfunction onConsumerError(err){\n  console.log(`Something wrong consuming event ${topicToConsume} : ${err}`);\n  process.exit(1);\n}\n\n// Any errors we encounter, including connection errors\nproducer.on('event.error', function(err) {\n  console.error('Error from producer');\n  console.error(err);\n  process.exit(1);\n})\n","annotate":1,"json":1,"TOPIC_TO_CONSUME":"TriggerForecastOptimizationResponse","TOPIC_TO_PRODUCE":"TriggerForecastOptimization","BROKER_LIST":"localhost:9092"},"timing":{"minutes":[0],"months":[5],"days":[16],"hours":[5]},"max_children":32,"timeout":3600,"catch_up":0,"queue_max":1000,"timezone":"America/New_York","plugin":"shellplug","title":"ForecastOptimization","category":"general","target":"allgrp","algo":"random","multiplex":0,"stagger":0,"retries":0,"retry_delay":0,"detached":0,"queue":0,"chain":"","chain_error":"","notify_success":"","notify_fail":"","web_hook":"","cpu_limit":0,"cpu_sustain":0,"memory_limit":0,"memory_sustain":0,"notes":"","id":"ejh8vu06v01","modified":1526465563,"created":1526461614,"username":"admin"},"action":"event_update","epoch":1526465563,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5327","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8y5kok0r","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526465513.972,"elapsed":28.442000150680542,"perf":"","cpu":{"min":4.7,"max":6.7,"total":11.4,"count":2,"current":4.7},"mem":{"min":71909376,"max":73498624,"total":145408000,"count":2,"current":71909376},"log_file_size":257637,"action":"job_complete","epoch":1526465542,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8y5kok0r","event":"ejh8vu06v01","action":"job_run","epoch":1526465513,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5427","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"event":{"enabled":1,"params":{"script":"#!/usr/bin/env node\n\n'use strict';\nlet Kafka = require('node-rdkafka');\nlet jobid = `${process.env.JOB_EVENT_TITLE}${process.env.JOB_ID}`.replace(' ','');\nconst topicToProduce = process.env.TOPIC_TO_PRODUCE ;\nconst topicToConsume = process.env.TOPIC_TO_CONSUME ;\nlet requestDelay = process.env.REQUEST_DELAY || 10000;\n\nvalidate();\n\nconsole.log('Creating producer')\nvar producer = new Kafka.Producer({\n  'metadata.broker.list': process.env.BROKER_LIST,\n  'client.id': jobid ,\n  'dr_cb': true\n});\n//message body\nlet trigger = {\n  timeout : Number(process.env.JOB_TIMEOUT),\n  jobid :  jobid || 'jobid' ,\n  processingTime : process.env.PROCESSING_TIME  ,\n  error : process.env.IN_ERROR || false,\n  operation: 'Start'\n};\n// message key\nlet key = {jobid: jobid};\n\nconsole.log('Producer connection');\n// Connect to the broker manually\nproducer.connect();\n\n// Wait for the ready event before proceeding\nproducer.on('ready', function() {\n  try {\n    console.log('Producer is ready');\n    // send message to job trigger\n    producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n\n    // start consuming response\n    var consumer = new Kafka.KafkaConsumer({\n      'debug': 'all',\n      'metadata.broker.list': process.env.BROKER_LIST,\n      'group.id': jobid,\n      'enable.auto.commit': true,\n      'auto.offset.reset' : 'smallest'\n    });\n    //logging debug messages, if debug is enabled\n    consumer.on('event.log', function(log) {\n      console.log(log);\n    });\n    //logging all errors\n    consumer.on('event.error',onConsumerError);\n    // when consumer is ready , subscribe to topics\n    consumer.on('ready', function(arg) {\n      console.log('consumer ready.' + JSON.stringify(arg));\n      consumer.subscribe([topicToConsume]);\n      //start consuming messages\n      consumer.consume();\n    });\n    consumer.on('data', function(msg) {\n      // Output the actual message contents\n      //console.log(JSON.stringify(msg));\n      let record = JSON.parse(msg.value.toString());\n      console.log(\"Ciao arnaldo\")\n      console.log(msg.value.toString());\n    });\n    consumer.on('disconnected', function(arg) {\n      console.log('consumer disconnected. ' + JSON.stringify(arg));\n    });\n    //starting the consumer\n    consumer.connect();\n\n    process.on('SIGTERM',()=>{\n \t console.log('Sending a message to abort job');\n\t consumer.disconnect();\n \t trigger.operation = 'Abort';\n \t // send message to job trigger\n \t producer.produce(topicToProduce,null,new Buffer(JSON.stringify(trigger)),new Buffer(JSON.stringify(key)),Date.now(),);\n   })\n\n  } catch (err) {\n    console.error('A problem occurred when sending our message');\n    console.error(err);\n    process.exit(1)\n  }\n});\n\n\n/**\n* Function execute on next message from kafka for a consumer\n*/\nfunction onNextMsgReceived(value){\n  console.log(`Job response received ${value.jobid} , status : ${value.result} , percentage : ${value.percentage}`);\n  console.log(`${value.percentage}%`);\n  if(value.result === 'Success' && value.percentage === 100){\n    process.exit();\n  }else if (value.result === 'Failure'){\n    process.exit(1);\n  }\n}\n\n/**\n* Function to validate if environment variable are properly configured\n*\n*/\nfunction validate() {\n  if(!process.env.JOB_ID) {\n    console.error('JOBID not defined !');\n    process.exit(1);\n  }else if(!process.env.JOB_EVENT_TITLE) {\n    console.error('JOB_EVENT_TITLE not defined !');\n    process.exit(1);\n  } else if(!process.env.JOB_TIMEOUT){\n    console.error('JOB_TIMEOUT not defined !');\n    process.exit(1);\n  } else if(!process.env.TOPIC_TO_CONSUME) {\n    console.error('TOPIC_TO_CONSUME not defined !');\n    process.exit(1);\n  }else if(!process.env.TOPIC_TO_PRODUCE) {\n    console.error('TOPIC_TO_PRODUCE not defined !');\n    process.exit(1);\n  }else if(!process.env.BROKER_LIST) {\n    console.error('BROKER_LIST not defined !');\n    process.exit(1);\n  }\n}\n\n/**\n*   An error occurs during a topic creation , so you need to shutdown a consumer instance\n*/\nfunction onConsumerError(err){\n  console.log(`Something wrong consuming event ${topicToConsume} : ${err}`);\n  process.exit(1);\n}\n\n// Any errors we encounter, including connection errors\nproducer.on('event.error', function(err) {\n  console.error('Error from producer');\n  console.error(err);\n  process.exit(1);\n})\n","annotate":1,"json":1,"TOPIC_TO_CONSUME":"TriggerForecastOptimizationResponse","TOPIC_TO_PRODUCE":"TriggerForecastOptimization","BROKER_LIST":"localhost:9092"},"timing":{"minutes":[0],"months":[5],"days":[16],"hours":[5]},"max_children":32,"timeout":3600,"catch_up":0,"queue_max":1000,"timezone":"America/New_York","plugin":"shellplug","title":"ForecastOptimization","category":"general","target":"allgrp","algo":"random","multiplex":0,"stagger":0,"retries":0,"retry_delay":0,"detached":0,"queue":0,"chain":"","chain_error":"","notify_success":"","notify_fail":"","web_hook":"","cpu_limit":0,"cpu_sustain":0,"memory_limit":0,"memory_sustain":0,"notes":"","id":"ejh8vu06v01","modified":1526465510,"created":1526461614,"username":"admin"},"action":"event_update","epoch":1526465510,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5325","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8y09bl0o","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526465265.969,"elapsed":236.9670000076294,"perf":"","cpu":{"min":0.4,"max":4.2,"total":20.499999999999993,"count":23,"current":0.4},"mem":{"min":68542464,"max":68747264,"total":1576681472,"count":23,"current":68747264},"log_file_size":635,"action":"job_complete","epoch":1526465502,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8y0mgr0p","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526465283.003,"elapsed":217.96000003814697,"perf":"","cpu":{"min":0.4,"max":3.2,"total":17.499999999999996,"count":21,"current":0.4},"mem":{"min":68743168,"max":69001216,"total":1443864576,"count":21,"current":69001216},"log_file_size":635,"action":"job_complete","epoch":1526465500,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8y15eo0q","code":1,"event":"ejh8vu06v01","category":"general","plugin":"shellplug","hostname":"osboxes","time_start":1526465307.552,"elapsed":191.36800003051758,"perf":"","cpu":{"min":0.5,"max":4.4,"total":17.6,"count":19,"current":0.5},"mem":{"min":68866048,"max":69013504,"total":1308602368,"count":19,"current":69013504},"log_file_size":635,"action":"job_complete","epoch":1526465498,"event_title":"ForecastOptimization","category_title":"General","plugin_title":"Shell Script","description":"Job Aborted: Manually aborted by user: admin"},{"id":"jjh8y15eo0q","event":"ejh8vu06v01","action":"job_run","epoch":1526465307,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5504","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8y0mgr0p","event":"ejh8vu06v01","action":"job_run","epoch":1526465283,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5504","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"},{"id":"jjh8y09bl0o","event":"ejh8vu06v01","action":"job_run","epoch":1526465265,"ip":"::ffff:10.0.2.15","headers":{"host":"10.0.2.15:3012","connection":"keep-alive","content-length":"5504","accept":"text/plain, */*; q=0.01","origin":"http://localhost:3012","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.139 Chrome/66.0.3359.139 Safari/537.36","content-type":"text/plain","referer":"http://localhost:3012/","accept-encoding":"gzip, deflate","accept-language":"it-IT,it;q=0.9,en-US;q=0.8,en;q=0.7"},"username":"admin"}]}